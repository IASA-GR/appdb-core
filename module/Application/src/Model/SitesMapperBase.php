<?php
/**
 * Copyright (C) 2015 IASA - Institute of Accelerating Systems and Applications (http://www.iasa.gr)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and 
 * limitations under the License.
 */
?>
<?php
// PLEASE DO NOT EDIT THIS FILE
// IT IS AUTOMATOCALLY GENERATED BY THE MODELLER
// AND ANY CHANGES WILL BE OVERWRITTEN
class Default_Model_SitesMapperBase
{
	protected $_dbTable;

	private function pgBool($v) { if ($v) return 't'; else return 'f'; }

	public function setDbTable($dbTable)
	{
		if (is_string($dbTable)) {
			$dbTable = new $dbTable();
		}
		if (!$dbTable instanceof Zend_Db_Table_Abstract) {
			throw new Exception('Invalid table data gateway provided');
		}
			$this->_dbTable = $dbTable;
			return $this;
	}

	public function getDbTable()
	{
		if (null === $this->_dbTable) {
			$this->setDbTable('Default_Model_DbTable_Sites');
		}
		return $this->_dbTable;
	}

	public function save(Default_Model_Site $value)
	{
		global $application;
		$data = array();
		if ( ! isnull($value->getId()) ) $data['id'] = $value->getId();
		if ( ! isnull($value->getName()) ) $data['name'] = $value->getName();
		if ( ! isnull($value->getShortname()) ) $data['shortname'] = $value->getShortname();
		if ( ! isnull($value->getOfficialname()) ) $data['officialname'] = $value->getOfficialname();
		if ( ! isnull($value->getDescription()) ) $data['description'] = $value->getDescription();
		if ( ! isnull($value->getPortalurl()) ) $data['portalurl'] = $value->getPortalurl();
		if ( ! isnull($value->getHomeurl()) ) $data['homeurl'] = $value->getHomeurl();
		if ( ! isnull($value->getContactemail()) ) $data['contactemail'] = $value->getContactemail();
		if ( ! isnull($value->getContacttel()) ) $data['contacttel'] = $value->getContacttel();
		if ( ! isnull($value->getAlarmemail()) ) $data['alarmemail'] = $value->getAlarmemail();
		if ( ! isnull($value->getCsirtemail()) ) $data['csirtemail'] = $value->getCsirtemail();
		if ( ! isnull($value->getGiisurl()) ) $data['giisurl'] = $value->getGiisurl();
		if ( ! isnull($value->getCountryID()) ) $data['countryid'] = $value->getCountryID();
		if ( ! isnull($value->getCountrycode()) ) $data['countrycode'] = $value->getCountrycode();
		if ( ! isnull($value->getCountryname()) ) $data['countryname'] = $value->getCountryname();
		if ( ! isnull($value->getRegionID()) ) $data['regionid'] = $value->getRegionID();
		if ( ! isnull($value->getRegionname()) ) $data['regionname'] = $value->getRegionname();
		if ( ! isnull($value->getTier()) ) $data['tier'] = $value->getTier();
		if ( ! isnull($value->getSubgrID()) ) $data['subgrid'] = $value->getSubgrID();
		if ( ! isnull($value->getRoc()) ) $data['roc'] = $value->getRoc();
		if ( ! isnull($value->getProductioninfrastructure()) ) $data['productioninfrastructure'] = $value->getProductioninfrastructure();
		if ( ! isnull($value->getCertificationstatus()) ) $data['certificationstatus'] = $value->getCertificationstatus();
		if ( ! isnull($value->getTimezone()) ) $data['timezone'] = $value->getTimezone();
		if ( ! isnull($value->getLatitude()) ) $data['latitude'] = $value->getLatitude();
		if ( ! isnull($value->getLongitude()) ) $data['longitude'] = $value->getLongitude();
		if ( ! isnull($value->getDomainname()) ) $data['domainname'] = $value->getDomainname();
		if ( ! isnull($value->getIp()) ) $data['ip'] = $value->getIp();
		if ( ! isnull($value->getGuID()) ) $data['guid'] = $value->getGuID();
		if ( ! isnull($value->getDatasource()) ) $data['datasource'] = $value->getDatasource();
		if ( ! isnull($value->getCreatedon()) ) $data['createdon'] = $value->getCreatedon();
		if ( ! isnull($value->getCreatedby()) ) $data['createdby'] = $value->getCreatedby();
		if ( ! isnull($value->getUpdatedon()) ) $data['updatedon'] = $value->getUpdatedon();
		if ( ! isnull($value->getUpdatedby()) ) $data['updatedby'] = $value->getUpdatedby();
		if ( ! isnull($value->getDeleted()) ) $data['deleted'] = $this->pgBool($value->getDeleted());
		if ( ! isnull($value->getDeletedon()) ) $data['deletedon'] = $value->getDeletedon();
		if ( ! isnull($value->getDeletedby()) ) $data['deletedby'] = $value->getDeletedby();


		$q1 = '';
		$q2 = '';
		if (null === ($id = '')) {
			unset($data['']);
			$this->getDbTable()->insert($data);
		} else {
			$s = $this->getDbTable()->getAdapter()->quoteInto($q1,$q2);
			$this->getDbTable()->update($data, $s);
		}
	}

	public function delete(Default_Model_Site $value)
	{
		$q1 = '';
		$q2 = '';
		$s=$this->getDbTable()->getAdapter()->quoteInto($q1,$q2);
		$this->getDbTable()->delete($s);
	}

	public function populate(&$entry,$row)
	{
		$entry->setId($row->id);
		$entry->setName($row->name);
		$entry->setShortname($row->shortname);
		$entry->setOfficialname($row->officialname);
		$entry->setDescription($row->description);
		$entry->setPortalurl($row->portalurl);
		$entry->setHomeurl($row->homeurl);
		$entry->setContactemail($row->contactemail);
		$entry->setContacttel($row->contacttel);
		$entry->setAlarmemail($row->alarmemail);
		$entry->setCsirtemail($row->csirtemail);
		$entry->setGiisurl($row->giisurl);
		$entry->setCountryID($row->countryid);
		$entry->setCountrycode($row->countrycode);
		$entry->setCountryname($row->countryname);
		$entry->setRegionID($row->regionid);
		$entry->setRegionname($row->regionname);
		$entry->setTier($row->tier);
		$entry->setSubgrID($row->subgrid);
		$entry->setRoc($row->roc);
		$entry->setProductioninfrastructure($row->productioninfrastructure);
		$entry->setCertificationstatus($row->certificationstatus);
		$entry->setTimezone($row->timezone);
		$entry->setLatitude($row->latitude);
		$entry->setLongitude($row->longitude);
		$entry->setDomainname($row->domainname);
		$entry->setIp($row->ip);
		$entry->setGuID($row->guid);
		$entry->setDatasource($row->datasource);
		$entry->setCreatedon($row->createdon);
		$entry->setCreatedby($row->createdby);
		$entry->setUpdatedon($row->updatedon);
		$entry->setUpdatedby($row->updatedby);
		$entry->setDeleted($row->deleted);
		$entry->setDeletedon($row->deletedon);
		$entry->setDeletedby($row->deletedby);
	}

	public function find($id, Default_Model_Sites &$value)
	{
		$result = $this->getDbTable()->find($id);
		if (0 == count($result)) {
			return;
		}		$row = $result->current();
		$this->populate($value,$row);	}

	public function count($filter = null)
	{
		$select = $this->getDbTable()->select();
		$select->from($this->getDbTable(),array('COUNT(*) AS count'));
		if ( ($filter !== null) && ($filter->expr() != '') ) {
			$select->where($filter->expr());
		}
		$res = $this->getDbTable()->fetchAll($select);
		return $res[0]->count;
	}
	public function fetchAll($filter = null, $format = '')
	{
		$select = $this->getDbTable()->select();
		if ( ($filter !== null) && ($filter->expr() != '') ) {
			$select->where($filter->expr());
		}
		if ($filter !== null) $select->limit($filter->limit, $filter->offset);
		if ($filter !== null) $select->order($filter->orderBy);
		$resultSet = $this->getDbTable()->fetchAll($select);
		$entries = array();
		foreach ($resultSet as $row) {
			$entry = new Default_Model_Site();
			$this->populate($entry,$row);
			if ($format === 'xml') $entry = $entry->toXML(true);
			$entries[] = $entry;
		}		return $entries;
	}
}